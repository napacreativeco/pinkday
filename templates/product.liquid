{% assign add_to_cart = 'Add to cart' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}


<style>

  .swiper, swiper-container {
    overflow-x: hidden !important;
    overflow-y: visible !important;
  }
</style>
<div class="page-container" data-page="collection" itemscope itemtype="http://schema.org/Product">
  
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product | img_url: 'grande' }}" />
  
  <form action="/cart/add" method="post" enctype="multipart/form-data">
    
    <div data-ajax-cart-messages="form" > 
      <!-- Errors and messages appear here --> 
    </div>


    <div class="product--wrapper">

      {% comment %} IMAGE {% endcomment %}
      <div class="product-image">
        <div class="swiper">
          <div class="swiper-wrapper">
            {% for image in product.images %}

              <div class="swiper-slide">
                  <img src="{{ image | img_url: 'large' }}" alt="{{ image.alt | escape }}" />
              </div>

            {% endfor %}
                      
          </div>

          <div class="swiper-controls">
            <div class="swiper-pagination"></div>
          </div>
          
        </div>
      </div>


      {% comment %} DATA {% endcomment %}
      <div class="product-data">
        
        <div class="title">
          <h1 class="product-title" itemprop="title">{{ product.title }}</h1>
        </div>

        <p class="product-description" itemprop="description">
          {{ product.description }}
        </p>

        {% comment %} ACTIONS {% endcomment %}
        <div class="actions">

          <div id="product-variants" class="{% if hide_default_title %} hidden{% endif %}">

            {% assign hide_default_title = false %}
            {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
              {% assign hide_default_title = true %}
            {% endif %}     

            {% if product.variants.size > 1 %} 

              <script type="text/javascript" charset="utf-8">
                jQuery(function() { 
                  var first_variant_price = jQuery("ul li input[type='radio']:checked").attr("data-price");
                  var first_variant_compare_at_price = jQuery("ul li input[type='radio']:checked").attr("data-compare-at-price") || ''; 

                  jQuery(".price-field span").html(first_variant_price);

                  jQuery(".price-field del").html(first_variant_compare_at_price);

                  jQuery("input[type='radio']").click(function() {

                    var variant_price = jQuery(this).attr("data-price");
                    jQuery(".price-field span").html(variant_price);
                    
                    var variant_compare_at_price = jQuery(this).attr("data-compare-at-price") || '';
                    jQuery(".price-field del").html(variant_compare_at_price);

                  });
                });
              </script>

              <ul class="variants-list">
                {% assign found_available_variant = false %}
                {% for variant in product.variants %}
                  <li class="switch-field">
                      {% if variant.available %}
                          <input type="radio"{% if variant.compare_at_price > variant.price %} data-compare-at-price="{{ variant.compare_at_price | money_with_currency }}"{% endif %} data-price="{{ variant.price | money_with_currency }}" id="{{ variant.id }}" value="{{ variant.id }}" name="id"{% if found_available_variant == false  %}{% assign found_available_variant = true %} checked="checked"{% endif %} />
                          
                          <label for="{{ variant.id }}">
                            {{ variant.title }}
                          </label>
                      {% else %}
                          <input type="radio" class="out-of-stock" id="{{ variant.id }}" value="{{ variant.id }}" name="id" />
                          <label for="{{ variant.id }}" class="out-of-stock">
                            {{ variant.title }}
                          </label>
                      {% endif %}
                    </li>
                {% endfor %}
              </ul>

            {% else %}
          
                <input type="hidden" name="id" value="{{ product.variants.first.id }}" />
          
            {% endif %}

          </div>

          {% comment %} PRICE {% endcomment %}
          <div class="price">
            <div id="product-price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">

              <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
              {% if product.available %}
                <link itemprop="availability" href="http://schema.org/InStock" />
              {% else %}
                <link itemprop="availability" href="http://schema.org/OutOfStock" />
              {% endif %}

              <p>
                {% assign variant = product.selected_or_first_available_variant %}
                {% if product.compare_at_price > product.price %}
                  <span class="product-price on-sale" itemprop="price">{{ variant.price | money_without_trailing_zeros }}</span>
                  <s class="product-compare-price">{{ variant.compare_at_price | money_without_trailing_zeros }}</s>
                {% else %}
                  <span class="product-price" itemprop="price">{{ variant.price | money_without_trailing_zeros }}</span>
                {% endif %}
              </p>

            </div>
          </div>

        </div>


        {% comment %} Add to cart {% endcomment %}
        <div id="product-add">
          <input type="submit" name="add" id="add" value="{{ add_to_cart | escape }}">
        </div>

        <div data-ajax-cart-messages="{{ item.key }}"></div>

      </div>

    </div>

  </form>

</div>

<script>

  const swiper = new Swiper('.swiper', {
    // Optional parameters
    direction: 'horizontal',
    loop: true,
    pagination: {
      el: '.swiper-pagination',
      clickable: true
    },
    slidesPerView: 1
  });

</script>

{% comment %}
  Adding support for product options. See here for details:  
  http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options
{% endcomment %}

<script>
  
  var selectCallback = function(variant, selector) {

    if (variant) {
      
      // Swap image.
      if (variant.featured_image) {
        var newImage = variant.featured_image; // New image object.
        var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
        Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
      }
      
      // Selected a valid variant that is available.
      if (variant.available) {
            
        // Enabling add to cart button.
        jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});
      
        // If item is backordered yet can still be ordered, we'll show special message.
        if (variant.inventory_management && variant.inventory_quantity <= 0) {
          jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
          jQuery('#backorder').removeClass("hidden");
        } else {
          jQuery('#backorder').addClass("hidden");
        }
        
      } else {
        // Variant is sold out.
        jQuery('#backorder').addClass('hidden');
        jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);       
      }
      
      // Whether the variant is in stock or not, we can update the price and compare at price.
      if ( variant.compare_at_price > variant.price ) {
        jQuery('#product-price').html('<span class="product-price on-sale">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
      } else {
        jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
      }        

    } else {
      // variant doesn't exist.
      jQuery('#product-price').empty();
      jQuery('#backorder').addClass('hidden');
      jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
    }

  };
    
  jQuery(function($) {

    new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });
    
    // Add label if only one product option and it isn't 'Title'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
    {% endif %}

  });

  Shopify.Image.preload({{ product.images | json }}, 'grande');
  Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>